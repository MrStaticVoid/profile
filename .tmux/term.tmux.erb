#!/usr/bin/env zsh
#
# term.tmux
#
# Try to determine the actual terminal in which the session is attached
# and set colors and status bar appearance based on the available
# capabilities.
#
# The theme is loosely modeled off of my custom Vim Airline tabline theme.
#

# Add TERM to the default list of variables to update on session attachment.
# This lets me make configuration decisions based on the terminal in which the
# session is (most recently) attached.
if [[ ! $(tmux show -g update-environment) =~ '(^|\s)TERM(\s|$)' ]]; then
    tmux set -ag update-environment ' TERM'
fi

# Grab and export the current session TERM variable
eval $(tmux show-environment -s TERM)

<% require 'colorscheme'
cs = ColorScheme.new -%>
if (( terminfo[colors] >= 256 )); then
    # Konsole doesn't support configuring the Base16 colors > 16
    if [[ $TERM == 'konsole-256color' ]]; then
<% cs.colors_by_base.each do |c| -%>
        base<%= c.base %>='#<%= c.hex %>'
<% end -%>
    else
<% cs.colors_by_base.each do |c| -%>
        base<%= c.base %>='colour<%= c.ansi %>'
<% end -%>
    fi
elif (( terminfo[colors] >= 16 )); then
<% cs.colors_by_base(16).each do |c| -%>
    base<%= c.base %>='colour<%= c.ansi %>'
<% end -%>
else
<% cs.colors_by_base(8).each do |c| -%>
    base<%= c.base %>='colour<%= c.ansi %>'
<% end -%>
fi

# Appearance settings that apply to all terminal types
tmux set -g status-style "bg=${base01}"
tmux set -g status-right ''
tmux setw -g window-status-separator ''
tmux setw -g window-status-format ' #I: #W#F '
tmux setw -g window-status-current-format ' #I: #W#F '
tmux setw -g window-status-current-style "bg=blue,fg=${base01},bold"
tmux setw -g window-status-activity-style "bg=green,fg=${base01}"
tmux setw -g window-status-bell-style "bg=yellow,fg=${base01}"

# Per-terminal settings
if [[ $TERM == *256color ]]; then
    tmux set -g default-terminal tmux-256color
    tmux setw -g window-status-last-style "bg=${base02}"
    separator='î‚°'
else
    tmux set -g default-terminal tmux
    tmux setw -g window-status-last-style "bold"
    separator='>'
fi

# Detect if we're running in another tmux session and set prefix and
# appearance accordingly
if [[ $TERM == tmux* ]]; then
    tmux unbind C-b; tmux set -g prefix C-a; tmux bind C-a send-prefix
    session_color='magenta'
else
    tmux unbind C-a; tmux set -g prefix C-b; tmux bind C-b send-prefix
    session_color='cyan'
fi

tmux set -g status-left-style "bg=${session_color},fg=${base01}"
tmux set -g status-left " #[bold]#S#[nobold] #[reverse]${separator} "
