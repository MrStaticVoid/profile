#!/usr/bin/env zsh
#
# sway-greedy-view
#
# Select a workspace by bringing it to the current monitor the way Xmonad does
#

if [[ $# != 1 ]]; then
    print "Usage: ${0} WS" >&2
    exit 1
fi

target_ws="$1"

workspaces="$(swaymsg -t get_workspaces)"
<<< "$workspaces" jq -r ".[] | select(.name == \"${target_ws}\") | .visible, .output, .focus == []" | IFS=$'\n' read -d '' target_ws_visible target_ws_output target_ws_empty
<<< "$workspaces" jq -r '.[] | select(.focused) | .name, .output, .focus == []' | IFS=$'\n' read -d '' focused_ws focused_ws_output focused_ws_empty

if [[ $target_ws_visible != 'true' ]]; then
    if [[ $target_ws_output != '' && $target_ws_output != $focused_ws_output ]]; then
        swaymsg "[workspace=\"${target_ws}\"]" move workspace output "$focused_ws_output"
    else
        swaymsg workspace "$target_ws"
    fi
elif [[ $target_ws != $focused_ws ]]; then
    # Empty workspaces cannot be moved so use a sequence of commands that
    # causes the empty workspace to be hidden (removed), then restore it on the
    # correct output.
    if [[ $target_ws_empty == 'true' && $focused_ws_empty == 'true' ]]; then
        swaymsg "workspace _; focus output '${target_ws_output}'; workspace '${focused_ws}'; focus output '${focused_ws_output}'; workspace '${target_ws}'"
    elif [[ $target_ws_empty == 'true' ]]; then
        swaymsg "[workspace=\"${focused_ws}\"] move workspace output '${target_ws_output}'; focus output '${focused_ws_output}'; workspace '${target_ws}'"
    elif [[ $focused_ws_empty == 'true' ]]; then
        swaymsg "[workspace=\"${target_ws}\"] move workspace output '${focused_ws_output}'; focus output '${target_ws_output}'; workspace '${focused_ws}'; focus output '${focused_ws_output}'"
    else
        swaymsg "[workspace=\"${focused_ws}\"] move workspace output '${target_ws_output}'; [workspace=\"${target_ws}\"] move workspace output '${focused_ws_output}'"
    fi
fi
