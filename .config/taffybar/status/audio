#!/usr/bin/env zsh

SELF="$0"
source "$(dirname "$SELF")/lib.zsh" "$SELF"

wait_for_events() {
    while event="$(get_event)"; do
        if [[ $event == *sink* || $event == *server* ]]; then
            break
        fi
    done
}

main() {
    if get_state > /dev/null; then
        timeout 5 "${SELF}" wait
    fi

    default_sink="$(pactl info | awk '/^Default Sink:/ { print $3 }')"

    pactl list sinks | awk -v default_sink="$default_sink" '
        /\tName:/        { is_default = $2 == default_sink }
        /\tDescription:/ { if (is_default) { print substr($0, index($0, ": ") + 2) } }
        /\tMute:/        { if (is_default) { print $2 } }
        /\tVolume:/      { if (is_default) { print $7 } }
        /\tActive Port:/ { if (is_default) { print $3 } }
    ' | tr '\n' ':' | IFS=':' read description mute volume port rest

    if [[ $description == 'Built-in Audio Analog'* ||
          $description == 'Dell AC511 USB SoundBar Analog Stereo' ]]; then
        if [[ $mute == 'yes' ]]; then
            icon="$(fontawesome "\uf6a9")"
        elif [[ $port == 'analog-output-headphones' ]]; then
            icon="$(fontawesome "\uf025")"
        else
            icon="$(fontawesome "\uf028")"
        fi

        segment "${icon} $(printf '%d' "$volume")dB"
    fi

    set_state 1
}

case "$1" in
    'monitor')
        start_monitor_loop pactl subscribe
        ;;

    'wait')
        wait_for_events
        ;;

    *)
        main
        ;;
esac
